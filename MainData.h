#define SYSTICK_DELAY 96000 // задержка на 1мссек

#define t_impulse 96000 // 1 милисекунда

#define period_sensor 480000       //  100 Гц 
#define time_imp_1u  period_sensor - 48     //  1 us
#define time_imp_5u  period_sensor - 240    //  5 us
#define time_imp_10u period_sensor - 480    // 10 us

#define step_grad 0.018 
#define f_cpu 96000000.0 

#define Base_address_ext_RAM 0x1C000000 ;

extern unsigned int work_mode ;
extern unsigned int mode_make_LFM ;
extern unsigned int DDS_F_begin ;
extern unsigned int DDS_F_end ;
extern unsigned int DDS_step_changed_F ;
extern unsigned int DDS_time_changed_F ;
extern unsigned int DAC_out_value ;
extern unsigned int DAC_number_of_point_in_period ;
extern unsigned int DAC_F_sampling ;
//extern unsigned int INT1_CFG;
extern unsigned int manual_code_antenn;

extern unsigned int time_reconnect_a ;
//extern unsigned int code_antenn ;
extern unsigned int CLICK_THS ;
extern unsigned int TIME_LIMIT ;
extern unsigned int TIME_LATENCY ;
extern unsigned short number_of_code_antenn ;
extern unsigned short code_antenn[] ;
extern unsigned short number_of_code_pila ;

//extern unsigned int Read_Data_from_RAM  ;
//extern unsigned int Read_Data_from_RAM_next ;
extern unsigned int WHO_AM_I  ;
extern unsigned int STATUS_REG2  ;
extern unsigned int FIFO_SRC_REG  ;
extern unsigned int INT1_SOURCE  ;
extern unsigned int CLICK_SRC  ;

extern unsigned int OUT_ADC0  ;
extern unsigned int OUT_ADC1  ;
extern unsigned int OUT_ADC3  ;

extern unsigned int OUT_X  ;
extern unsigned int OUT_Y  ;
extern unsigned int OUT_Z  ;

extern unsigned char current_mode ;
extern unsigned char value_level;
extern unsigned char number_of_write ;
extern unsigned char set_DAC ;

extern unsigned char Ready_ADC  ;
extern unsigned char Start_ADC  ;
extern unsigned char work_ADC  ;
extern unsigned char On_antenn ;
extern unsigned char err_ext_RAM ;

extern unsigned char ArrADC[];
extern unsigned int num_byte_ADC ;
extern unsigned short ArrPila[];


//extern unsigned char Time_repeart_answer ;
//extern double max_speed_X ;
//extern double max_speed_Y ;
//extern double max_current_speed_X ;
//extern double max_current_speed_Y ;
//extern unsigned int max_number_of_step_starting_X ;
//extern unsigned int max_number_of_step_starting_Y ;
//extern unsigned int current_number_of_step_starting_X ;
//extern unsigned int current_number_of_step_starting_Y ;
//extern unsigned int start_period_X;
//extern unsigned int start_period_Y;

//extern unsigned int current_period_X  ;
//extern unsigned int current_period_Y  ;
//extern unsigned int number_of_step_X  ;
//extern unsigned int number_of_step_Y  ;

extern unsigned char status_block ;
extern unsigned char status_block1 ;

//extern unsigned int	 value_encoder_0 ;
//extern unsigned int	 value_encoder_1	;
//extern unsigned int  step_to_finished_X ;
//extern unsigned int  step_to_finished_Y ;

//extern          int  step_to_X ;
//extern          int  step_to_Y ;
//extern unsigned char ready_data_move ;
//extern unsigned char change_param_X ;
//extern unsigned char change_param_Y ;

//extern unsigned char 	stop_step_Y ;
//extern unsigned char 	stop_step_X ;
//extern unsigned char 	add_step_y ;
//extern unsigned char 	add_step_x ;
//extern unsigned char 	enable_test ;

/*---входной буфер для обработки*/
extern unsigned char *BuffDataChar;
extern int *PosDataByte;
extern unsigned char BuffWorkFlash[1024] ;


/*---переменные для обмена с ПК*/
extern unsigned char TypeRdPack;							
extern unsigned char TypeWrPack;
extern unsigned char EnableRD;
extern unsigned char EnableWR;

/*---счетчики*/
extern unsigned char CntIDPcakWr;
extern unsigned char CntIDPcakWrRespon;
extern unsigned char CntRun;
extern unsigned int CntWrPack;

/*---флаги*/
extern char FlgEnableProcess;
extern char FlgCorrectReception;

/*---переменные контроля*/
extern unsigned int AmountWrPack;

/*---переменные протокола*/
extern unsigned char ReceivedCommand;
extern unsigned char SentCommand;

extern unsigned int max_answer_summ ;

extern unsigned int *address_ext_RAM_read ;
extern unsigned int *address_ext_RAM      ;


//extern struct StateBlock
//{
//	char BitReady;          //??? – ?????. ???????? ???????. 
//	char BitMeasurement;    //??? ?????? ????????? – ??? ?????? ?? ???????????? ?????????? ???????.
//	char BitStop;           //??? – ????????? ??????? ???????.
//	char BitNotRespon;      //??? – ??? ?????? ?? ??????? ???????????
//	char Temprature_correction_ON  ;    //??? – ????? ?????????? ???
//	char Temprature_correction_OFF ;    //??? – ????? ?????????? ???
////	char BitWorkOn;         //??? – ????? ?????? ???
//	char BitGenerFreq;      //??? – ???????????? ??????? 
//	char BitGenerPWM;       //??? - ???????????? ??? ??????? 
//	char Bit4_20mA;         //??? - ???????????? ???????? ?????? 4-20 ??.
//	char BitOmnibus;        //??? – ?????????????? ???????? ??????: Omnibus 
//	char BitModBus;         //??? – ?????????????? ???????? ??????: ModBus
//} sStateBlock;

//extern struct SetStateBlock
//{
//	char BitSetGenerFreq;      //??? – ???????????? ??????? 
//	char BitSetGenerPWM;       //??? - ???????????? ??? ??????? 
//	char BitSet4_20mA;         //??? - ???????????? ???????? ?????? 4-20 ??.
//	char BitSetOmnibus;        //??? – ?????????????? ???????? ??????: Omnibus 
//	char BitSetModBus;         //??? – ?????????????? ???????? ??????: ModBus
//	char Set_Temprature_correction_ON  ;    //??? – ????? ?????????? ???
//	char Set_Temprature_correction_OFF ;    //??? – ????? ?????????? ???
////	char BitSetBWorkOn;        //??? – ????? ?????? ???
//} sSetStateBlock;

//extern struct OptionBlock
//{
//    char FCURR_FMIN;            // ?????????? ??????? ??????? ??? ???.
//    char FCURR_FMAX;            // ?????????? ??????? ??????? ??? ????.
//    double TSLOPE_T0_k_t;          // ????????? ???????
//    double TSLOPE_T0_k_t0;         // ???????? ???????? ?????????
//    double SET_FMIN;               // ??????????? ???????
//    double SET_FMAX;               // ???????????? ???????
//    double SET_PWM_MAX;            // ????.?????????? ?? ??.??????
//    char SET_PWM_MOD;           // 0/1 - ?????? / ????????? ?????
//    double SET_TRL;                // ??????? ?????????? ????????? ??????? ???????
//    unsigned int SET_FILT_LENG;          // ?????.?????-?(10?)??????? ????.?? ????? ??????
//    unsigned int SET_PERIOD;             // ?????.??????? ????????-? ?????? ??????? ??????
//    unsigned int FMAX_answer_ultrasonic;          // ????? ??????-? ?????? ?????? ?????? ????? ????????

////    double FMIN_answer_ultrasonic;    		// ???????? ???????? ???????? ????????? ?? 80 ??? ?? 109.7 ???
//    unsigned int FMIN_answer_ultrasonic;    		// ???????? ???????? ???????? ????????? ?? 80 ??? ?? 109.7 ???
//    double TimeDelay15;          		// ????? ???????? ??????? ? time_imp_1u ?? time_imp_5u
//    unsigned int AmountResponImp;       // ?????????? ???????? ????????? ??? ??????? 
//    unsigned int MaxAmountRespon;       // ???????????? ?????????? ??????????? ???????? ????????? 
//    unsigned int AmountResponAverage;   // ?????????? ??????? ??? ??????????
//    unsigned int AmountResponDesigion;  // ?????????? ??????? ??? ???????? ??????? 
//}  sOptionBlock;

//extern struct DurationBlock
//{
//     unsigned int AmountDuration;    
//     unsigned int Duration[10];              // ????????????
//     unsigned int Delay[10];                 // ????????
//     unsigned int Dist_to_next[10];                 // ????????
//     unsigned int Dist_to_last[10];                 // ????????
//} sDurationBlock;

//extern struct CalibrationBlock
//{
//     unsigned int AmountCalibration;
//     double Volume[10];
//     unsigned int Level[10];
//     double koeff_k[10];
//     double koeff_b[10];
//     double Temprature_calibration	;           		// calibration temprature
//} sCalibrationBlock;

extern struct DynamicData
{
//     unsigned int Level;
//     double Temper;
//     double Volume;
      unsigned int time_after_start;
			short temprature1;
			short temprature2;
			short temprature3;
			unsigned char status_sensor;
			unsigned short number_shock;
			unsigned short amplituda_shock;
			unsigned short duration_shock;
			unsigned short number_of_write;
//			unsigned char  current_mode;
			unsigned char reserved_byte;
	
} sDynamicData;